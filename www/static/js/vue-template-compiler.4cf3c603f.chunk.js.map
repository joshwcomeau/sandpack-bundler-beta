{"version":3,"sources":["webpack:///./src/sandbox/eval/transpilers/vue/v2/template-compiler/modules/transform-require.ts","webpack:///./src/sandbox/eval/transpilers/vue/v2/template-compiler/modules/transform-srcset.ts","webpack:///./src/sandbox/eval/transpilers/vue/v2/template-compiler/loader.ts"],"names":["defaultOptions","img","image","userOptions","addDependency","options","postTransformNode","node","tag","attrs","attributes","some","attr","rewrite","Array","isArray","forEach","item","transform","name","value","charAt","length","firstChar","slice","JSON","parse","indexOf","escapedSpaceCharacters","imageCandidates","substr","split","map","s","replace","trim","url","descriptor","require","urlToRequire","code","o","i","a","secondChar","hotReloadAPIPath","html","loaderContext","emitModule","vueHotReloadAPIRaw","vueOptions","depPromises","p","push","defaultModules","transformRequire","transformSrcset","userModules","compilerModules","compilerOptions","preserveWhitespace","modules","concat","directives","compilerDirectives","comments","hasComment","scopeId","hasScoped","id","compiled","compiler","tips","tip","emitWarning","message","fileName","_module","module","parent","path","lineNumber","columnNumber","source","errors","emitError","Error","pad","e","join","bubleOptions","buble","stripWith","transforms","stripWithFunctional","staticRenderFns","fn","toFunction","transpile","render","exportsName","esModule","Promise","all","line"],"mappings":"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","file":"static/js/vue-template-compiler.4cf3c603f.chunk.js","sourcesContent":["/* eslint-disable */\nimport type { ModuleOptions } from 'vue-template-compiler';\n\n// vue compiler module for transforming `<tag>:<attribute>` to `require`\nvar defaultOptions = {\n  img: 'src',\n  image: 'xlink:href',\n};\n\nexport default (userOptions, addDependency): ModuleOptions => {\n  var options = userOptions\n    ? { ...defaultOptions, userOptions }\n    : defaultOptions;\n\n  return {\n    postTransformNode: node => transform(node, options, addDependency),\n  } as ModuleOptions;\n};\n\nfunction transform(node, options, addDependency) {\n  for (var tag in options) {\n    if (node.tag === tag && node.attrs) {\n      var attributes = options[tag];\n      if (typeof attributes === 'string') {\n        node.attrs.some(attr => rewrite(attr, attributes, addDependency));\n      } else if (Array.isArray(attributes)) {\n        attributes.forEach(item =>\n          node.attrs.some(attr => rewrite(attr, item, addDependency))\n        );\n      }\n    }\n  }\n}\n\nfunction rewrite(attr, name, addDependency) {\n  if (attr.name === name) {\n    var value = attr.value;\n    var isStatic =\n      value.charAt(0) === '\"' && value.charAt(value.length - 1) === '\"';\n    if (!isStatic) {\n      return;\n    }\n    var firstChar = value.charAt(1);\n    if (firstChar === '.' || firstChar === '~') {\n      if (firstChar === '~') {\n        value = '\"' + value.slice(2);\n      }\n      // get dependency the quotes\n      attr.value = `require(${value})`;\n\n      addDependency(JSON.parse(value));\n    }\n    return true;\n  }\n}\n","/* eslint-disable */\nimport type { ModuleOptions } from 'vue-template-compiler';\n\n// vue compiler module for transforming `img:srcset` to a number of `require`s\nexport default function (): ModuleOptions {\n  return {\n    postTransformNode: node => transform(node),\n  } as ModuleOptions;\n}\n\nfunction transform(node): void {\n  const tags = ['img', 'source'];\n\n  if (tags.indexOf(node.tag) !== -1 && node.attrs) {\n    node.attrs.forEach(attr => {\n      if (attr.name === 'srcset') {\n        // same logic as in transform-require.js\n        var value = attr.value;\n        var isStatic =\n          value.charAt(0) === '\"' && value.charAt(value.length - 1) === '\"';\n        if (!isStatic) {\n          return;\n        }\n\n        // http://w3c.github.io/html/semantics-embedded-content.html#ref-for-image-candidate-string-5\n        const escapedSpaceCharacters = /( |\\\\t|\\\\n|\\\\f|\\\\r)+/g;\n\n        const imageCandidates = value\n          .substr(1, value.length - 2)\n          .split(',')\n          .map(s => {\n            // The attribute value arrives here with all whitespace, except normal spaces, represented by escape sequences\n            const [url, descriptor] = s\n              .replace(escapedSpaceCharacters, ' ')\n              .trim()\n              .split(' ', 2);\n            return { require: urlToRequire(url), descriptor: descriptor };\n          });\n\n        let code = '';\n        imageCandidates.forEach((o, i, a) => {\n          code +=\n            o.require +\n            ' + \" ' +\n            o.descriptor +\n            (i < a.length - 1 ? ', \" + ' : '\"');\n        });\n\n        attr.value = code;\n      }\n    });\n  }\n}\n\nfunction urlToRequire(url) {\n  // same logic as in transform-require.js\n  var firstChar = url.charAt(0);\n  if (firstChar === '.' || firstChar === '~') {\n    if (firstChar === '~') {\n      var secondChar = url.charAt(1);\n      url = '\"' + url.slice(secondChar === '/' ? 2 : 1);\n    }\n    return `require(\"${url}\")`;\n  }\n}\n","/* eslint-disable no-use-before-define */\nimport transpile from 'vue-template-es2015-compiler';\nimport * as compiler from 'vue-template-compiler';\n// @ts-ignore\nimport { LoaderContext } from 'sandpack-core';\n// @ts-ignore\nimport vueHotReloadAPIRaw from '!raw-loader!vue-hot-reload-api';\n\n// eslint-disable-next-line\nimport transformRequire from './modules/transform-require';\nimport transformSrcset from './modules/transform-srcset';\n\nconst hotReloadAPIPath = '!noop-loader!/node_modules/vue-hot-reload-api.js';\nexport default async function (\n  html: string,\n  loaderContext: LoaderContext\n): Promise<string> {\n  loaderContext.emitModule(\n    hotReloadAPIPath,\n    vueHotReloadAPIRaw,\n    '/',\n    false,\n    false\n  );\n\n  const { options } = loaderContext;\n  const vueOptions = options.vueOptions || {};\n  const needsHotReload = true;\n\n  const depPromises = [];\n  const addDependency = (p: string) => {\n    depPromises.push(loaderContext.addDependency(p));\n  };\n\n  const defaultModules = [\n    transformRequire(options.transformRequire, addDependency),\n    transformSrcset(),\n  ];\n  const userModules = vueOptions.compilerModules || options.compilerModules;\n\n  const compilerOptions: compiler.CompilerOptionsWithSourceRange = {\n    preserveWhitespace: options.preserveWhitespace,\n    modules: defaultModules.concat(userModules || []),\n    directives:\n      vueOptions.compilerDirectives || options.compilerDirectives || {},\n    // @ts-ignore\n    comments: options.hasComment,\n    // @ts-ignore\n    scopeId: options.hasScoped ? options.id : null,\n  };\n\n  const compiled = compiler.compile(html, compilerOptions);\n\n  // tips\n  if (compiled.tips && compiled.tips.length) {\n    compiled.tips.forEach(tip => {\n      loaderContext.emitWarning({\n        name: 'vue-warning',\n        message: typeof tip === 'string' ? tip : '',\n        fileName: loaderContext._module.module.parent\n          ? loaderContext._module.module.parent.path\n          : loaderContext.path,\n        lineNumber: 1,\n        columnNumber: 1,\n        source: 'vue-template-compiler',\n      });\n    });\n  }\n\n  let code;\n  if (compiled.errors && compiled.errors.length) {\n    loaderContext.emitError(\n      new Error(\n        `\\n  Error compiling template:\\n${pad(html)}\\n` +\n          compiled.errors.map(e => `  - ${e}`).join('\\n') +\n          '\\n'\n      )\n    );\n    code = 'module.exports={render:function(){},staticRenderFns:[]}';\n  } else {\n    const bubleOptions = options.buble;\n    const stripWith = bubleOptions.transforms.stripWith !== false;\n    const { stripWithFunctional } = bubleOptions.transforms;\n\n    const staticRenderFns = compiled.staticRenderFns.map(fn =>\n      toFunction(fn, stripWithFunctional)\n    );\n\n    code =\n      transpile(\n        'var render = ' +\n          toFunction(compiled.render, stripWithFunctional) +\n          '\\n' +\n          'var staticRenderFns = [' +\n          staticRenderFns.join(',') +\n          ']',\n        bubleOptions\n      ) + '\\n';\n    // mark with stripped (this enables Vue to use correct runtime proxy detection)\n    if (stripWith) {\n      code += `render._withStripped = true\\n`;\n    }\n\n    const exports = `{ render: render, staticRenderFns: staticRenderFns }`;\n    code += `module.exports = ${exports}`;\n  }\n\n  // hot-reload\n  if (needsHotReload) {\n    const exportsName = vueOptions.esModule ? 'esExports' : 'module.exports';\n    code +=\n      '\\nif (module.hot) {\\n' +\n      '  module.hot.accept()\\n' +\n      '  if (module.hot.data) {\\n' +\n      '    require(\"' +\n      hotReloadAPIPath +\n      '\")' +\n      '      .rerender(\"' +\n      options.id +\n      '\", ' +\n      exportsName +\n      ')\\n' +\n      '  }\\n' +\n      '}';\n  }\n\n  await Promise.all(depPromises);\n\n  return code;\n}\n\nfunction toFunction(code, stripWithFunctional) {\n  return (\n    'function (' + (stripWithFunctional ? '_h,_vm' : '') + ') {' + code + '}'\n  );\n}\n\nfunction pad(html) {\n  return html\n    .split(/\\r?\\n/)\n    .map(line => `  ${line}`)\n    .join('\\n');\n}\n"],"sourceRoot":""}